# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: "RSpec"
on:
  push:
    branches: [ "master", "development" ]
  pull_request:
    branches: [ "master", "development" ]
jobs:
  rspec:
    runs-on: ubuntu-latest
    container:
      image: ruby:3.1.2

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: <%= ENV['DATABASE_USER'] %>
          POSTGRES_PASSWORD: <%= ENV['POSTGRES_PASSWORD'] %>
          POSTGRES_DB: <%= ENV['DATABASE_NAME'] %>
        ports:
        - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      RAILS_ENV: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@0a29871fe2b0200a17a4497bae54fe5df0d973aa # v1.115.3
        with:
          bundler-cache: true
          ruby-version: 3.1.2
        env:
          ImageOS: ubuntu20
      - name: Set up database schema
        run: bin/rails db:create db:schema:load
      - name: Run tests
        env:
          PGHOST: <%= ENV['DATABASE_HOST'] %>
          PGUSER: <%= ENV['DATABASE_USER'] %>
          PGPORT: ${{ job.services.postgres.ports[5432] }}
          RAILS_ENV: test
        run: bundle exec rspec
